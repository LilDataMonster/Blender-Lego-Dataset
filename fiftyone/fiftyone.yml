version: '3'

services:
#  s3fs:
#    privileged: true
#    image: efrecon/s3fs:1.86
#    restart: always
#    env_file: .env
#    #environment:
#    #  - AWS_S3_BUCKET=${AWS_S3_BUCKET}
#    #  - AWS_S3_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
#    #  - AWS_S3_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
#    #  # A workaround for bucket names containing '.' until the related s3fs-fuse issue is resolved
#    #  # Keep in mind this is a secrutiy risk (default is https)
#    #  # - AWS_S3_URL=http://s3.amazonaws.com
#    volumes:
#    # This also mounts the S3 bucket to `/mnt/s3data` on the host machine
#      #- /mnt/s3data:/opt/s3fs/bucket:shared
#      - ./mount:/opt/s3fs/bucket:shared

  fiftyone:
    #build: .
    image: fiftyone:latest
    #stdin_open: true # docker run -i
    #tty: true        # docker run -t
    #command: bash
    #command: python
    environment:
      - NAME=lego
      - DATASET_DIR=/data
      - LABELS_PATH=/data/data/coco_data/coco_annotations.json
      - FIFTYONE_DATABASE_URI=mongodb://root:qwerasdf@mongo:27017/?authSource=admin
      - FIFTYONE_DEFAULT_APP_PORT=5151
#    ports:
#      - 5151:5151
    depends_on:
      #- s3fs
      - mongo
    volumes:
      - /mnt/s3data:/data:shared
      #- ./mount:/data:shared
    networks:
      - default
      - traefik-public
    deploy:
      labels:
        traefik.enable: 'true'
        traefik.docker.network: 'traefik-public'
        traefik.http.services.fiftyone-service.loadbalancer.server.port: '5151'

        # http
        traefik.http.routers.fiftyone-http-router.rule: 'Host(`fiftyone.brixilated.lildata.monster`)'
        traefik.http.routers.fiftyone-http-router.entrypoints: 'http'
        traefik.http.routers.fiftyone-http-router.middlewares: 'fiftyone-redirect'
        traefik.http.middlewares.fiftyone-redirect.redirectscheme.scheme: 'https'

        # https
        traefik.http.routers.fiftyone-https-router.entrypoints: 'https'
        traefik.http.routers.fiftyone-https-router.rule: 'Host(`fiftyone.brixilated.lildata.monster`)'
        traefik.http.routers.fiftyone-https-router.tls: 'true'
        traefik.http.routers.fiftyone-https-router.tls.certresolver: 'letsencrypt_resolver'

  mongo:
    image: mongo:4.4
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=qwerasdf
    volumes:
      - ./mongodb/db:/data/db
    networks:
      - default

networks:
  default:
  traefik-public:
    external: true
